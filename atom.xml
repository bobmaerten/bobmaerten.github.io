<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bob Maerten</title>
  <subtitle>Humeurs, interrogations, pâtisseries, développement web, systèmes Linux et autres curiosités</subtitle>
  <id>http://bobmaerten.github.io/</id>
  <link href="http://bobmaerten.github.io/"/>
  <link href="http://bobmaerten.github.io/atom.xml" rel="self"/>
  <updated>2015-05-10T18:09:02+02:00</updated>
  <author>
    <name>Bob Maerten</name>
  </author>
  <entry>
    <title>Retour (virtuel) des commentaires</title>
    <link rel="alternate" href="/blog/2015/retour-virtuel-des-commentaires/"/>
    <id>/blog/2015/retour-virtuel-des-commentaires/</id>
    <published>2015-05-10T18:09:02+02:00</published>
    <updated>2015-05-10T18:09:02+02:00</updated>
    <author>
      <name>Bob Maerten</name>
    </author>
    <content type="html">&lt;p&gt;Cela faisait un petit moment que je voulais réintéger les commentaires sur ce blog. Étant hébergé sur GitHub Pages et donc purement statique, la solution est forcément externe. Je ne souhaitais pas pour autant utiliser le service évident pour ce genre de chose (disqus).&lt;/p&gt;

&lt;p&gt;Non pas que j&amp;#39;eusse de quelconques griefs envers ce service mais dans la continuité de proposer du contenu relativement maitrisé (un site statique), je souhaiter également maitriser cette partie commentaires. J&amp;#39;avais fait quelques essais il y quelques mois avec une appli Rails appelée &lt;a href="https://github.com/phusion/juvia"&gt;Juvia&lt;/a&gt; produite par &lt;a href="http://www.phusion.nl"&gt;Phusion&lt;/a&gt; qui manifestment n&amp;#39;est plus maintenue, mais qui a poutant été mis à jour entre temps en 4.2.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Je me suis dit que ce serait une bonne occasion de tester la mise en place de cette application dans un container Docker. De plus cela me permettrait d&amp;#39;associer la veille technologique nécessaire à cette mise en place avec mes nouvelles activités professionnelles (Rails + Sysadm + Hébergement).&lt;/p&gt;

&lt;h2&gt;Construction de l&amp;#39;image&lt;/h2&gt;

&lt;p&gt;Les gens qui gravitent autour de docker ne chôment pas. Des images officielles pour faire tourner des scripts &lt;a href="https://registry.hub.docker.com/_/ruby/"&gt;ruby&lt;/a&gt; et même des applications &lt;a href="https://registry.hub.docker.com/_/rails/"&gt;rails&lt;/a&gt; sont disponibles. En regardant le Dockerfile de l&amp;#39;image rails, on remarque qu&amp;#39;elle surcharge celle de ruby2.2, qui elle même s&amp;#39;appuie sur une succession d&amp;#39;images dérivées de debian:jessie. Ce qui signifie qu&amp;#39;il est toujours possible d&amp;#39;ajouter de nouveaux packages en cas d&amp;#39;usage d&amp;#39;une gem qui nécessite une compilation particulière.&lt;/p&gt;

&lt;p&gt;C&amp;#39;est ce qui s&amp;#39;est produit lors de l&amp;#39;essai de contruction de l&amp;#39;image de l&amp;#39;application de gestion des commentaires dont il est question ici. Le &lt;code&gt;Dockerfile&lt;/code&gt; est très simple comme le recommande le README de l&amp;#39;image, mais la construction échoue&amp;nbsp;:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat Dockerfile
FROM rails:onbuild

$ docker build -t juvia_image .
Sending build context to Docker daemon 160.5 MB
Sending build context to Docker daemon
Step 0 : FROM rails:onbuild
# Executing 4 build triggers
Trigger 0, COPY Gemfile /usr/src/app/
Step 0 : COPY Gemfile /usr/src/app/
 ---&amp;gt; Using cache
Trigger 1, COPY Gemfile.lock /usr/src/app/
Step 0 : COPY Gemfile.lock /usr/src/app/
 ---&amp;gt; Using cache
Trigger 2, RUN bundle install
Step 0 : RUN bundle install
 ---&amp;gt; Running in f004b22629a9
Don't run Bundler as root. Bundler can ask for sudo if it is needed, and
installing your bundle as root will break this application for all non-root
users on this machine.
Fetching gem metadata from https://rubygems.org/.........
Fetching version metadata from https://rubygems.org/...
Fetching dependency metadata from https://rubygems.org/..
Using rake 10.4.2
Installing i18n 0.7.0
Installing json 1.8.2
...
Installing capybara-screenshot 1.0.9

Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

    /usr/local/bin/ruby -r ./siteconf20150510-5-1wvt9so.rb extconf.rb
Command 'qmake -spec linux-g++ ' not available

Makefile not found

Gem files will remain installed in /usr/local/bundle/gems/capybara-webkit-1.3.1 for inspection.
Results logged to /usr/local/bundle/extensions/x86_64-linux/2.2.0-static/capybara-webkit-1.3.1/gem_make.out
An error occurred while installing capybara-webkit (1.3.1), and Bundler cannot
continue.
Make sure that `gem install capybara-webkit -v '1.3.1'` succeeds before
bundling.
INFO[0154] The command [/bin/sh -c bundle install] returned a non-zero code: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Comme on le constate, il manque l&amp;#39;outil &lt;code&gt;qmake&lt;/code&gt; pour que capybara-webkit puisse se compiler. Il faudrait ajouter l&amp;#39;installation du paquet en question dans le Dockerfile. Mais cette gem est dans les groupes :development et :test, qui ne sont pas utiles pour le fonctionnement en production. Pour éviter leur installation, il faudrait pouvoir préciser &lt;code&gt;--without test development&lt;/code&gt; à la commande bundle. Dans tous les cas, il faut réécrire le Dockerfile et en s&amp;#39;inspirant de celui de l&amp;#39;image rails, on arrive à quelque chose comme ça&amp;nbsp;:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat Dockerfile
FROM ruby:2.2.2
RUN apt-get update \
        &amp;amp;&amp;amp; apt-get install sqlite3 nodejs --no-install-recommends -y qt5-default libqt5webkit5-dev \
        &amp;amp;&amp;amp; apt-get clean \
        &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

RUN bundle config --global frozen 1

ENV RAILS_ENV production

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY Gemfile /usr/src/app/Gemfile
COPY Gemfile.lock /usr/src/app/Gemfile.lock
RUN bundle install --without='development test postgres mysql' --path=help

COPY . /usr/src/app

RUN bundle exec rake db:create \
 &amp;amp;&amp;amp; bundle exec rake db:schema:load \
 &amp;amp;&amp;amp; bundle exec rake assets:precompile RAILS_GROUPS=assets

EXPOSE 3000
CMD ["rails", "server", "-b", "0.0.0.0"]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Je passe les petites corrections pour avoir les bonnes valeurs sur les fichiers sensibles de Rails (SECREY_KEY_BASE en production, des valeurs correctes dans database.yml, etc.). Au final l&amp;#39;image se construit et on peut valider le fonctionnement.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run --detach --name juvia_app -e SECRET_KEY_BASE="abcde" juvia_image
3489371959f964b3b7d85e2bbda19d294a2c841b0a987261d68794c21bb4d59b

$ docker logs juvia_app
[2015-05-10 17:18:12] INFO  WEBrick 1.3.1
[2015-05-10 17:18:12] INFO  ruby 2.2.2 (2015-04-13) [x86_64-linux]
[2015-05-10 17:18:12] INFO  WEBrick::HTTPServer#start: pid=1 port=3000

$ curl -I $(boot2docker ip):3000
HTTP/1.1 302 Found
X-Frame-Options: SAMEORIGIN
X-Xss-Protection: 1; mode=block
X-Content-Type-Options: nosniff
Location: http://192.168.59.103:3000/admin/dashboard/new_admin
Content-Type: text/html; charset=utf-8
Cache-Control: no-cache
X-Request-Id: ba8299a1-d93d-4a14-93c1-d573e2c31178
X-Runtime: 0.002761
Server: WEBrick/1.3.1 (Ruby/2.2.2/2015-04-13)
Date: Sun, 10 May 2015 17:21:14 GMT
Content-Length: 0
Connection: Keep-Alive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oui, vous constatez l&amp;#39;utilisation de &lt;a href="http://boot2docker.io"&gt;boot2docker&lt;/a&gt;. Depuis mon passage sur OSX, mon portable sous linux a rendu l&amp;#39;âme (carte mère grillé), donc je me suis rabattu sur un environnement compatible, malgré &lt;a href="https://twitter.com/bobmaerten/status/597347960058454016"&gt;quelques surprises&lt;/a&gt;. Au fond c&amp;#39;est assez transparent, une fois la &lt;a href="http://blog.blackfire.io/how-we-use-docker.html"&gt;configuration correctement installée&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Mise en place du conteneur&lt;/h2&gt;

&lt;p&gt;Voila, nous avons une image plus ou moins fonctionelle, reste plus qu&amp;#39;à la déployer et assurer la persistance des données.
Pour le déploiement, j&amp;#39;ai à ma disposition une petite instance d&amp;#39;un serveur Ubuntu chez &lt;a href="https://www.digitalocean.com/?refcode=dd83518f68db"&gt;DigitalOcean&lt;/a&gt; sur lequel un &lt;em&gt;daemon&lt;/em&gt; docker assure le travail, ainsi qu&amp;#39;un &lt;a href="https://github.com/jwilder/nginx-proxy"&gt;conteneur particulier&lt;/a&gt; qui “écoute” les événements du service et qui met en place un reverse-proxy sur le nom du VIRTUAL_HOST passé en variable d&amp;#39;environnement du conteneur.&lt;/p&gt;

&lt;p&gt;Pour la persitance des données on peut soit monter un dossier de l&amp;#39;hôte lors du démarrage du conteneur avec l&amp;#39;option &lt;code&gt;-v&lt;/code&gt; ou alors créer des &lt;em&gt;data-volumes&lt;/em&gt; et utiliser l&amp;#39;option &lt;code&gt;--volumes-from&lt;/code&gt;. Pour des questions de simplicité et puisque je maitrise mon contexte j&amp;#39;utilise la première solution, mais docker préconise plutôt l&amp;#39;usage de conteneur de données pour des raisons de portabilité.&lt;/p&gt;

&lt;p&gt;Voici donc la ligne de commande permettant de lancer le conteneur&amp;nbsp;:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run --name comments \
       -e VIRTUAL_HOST="comments.bobmaerten.eu" \
       -e SECRET_KEY_BASE="$(rake secret)" \
       -v /root/containers/comments/db:/usr/src/app/db \
       -v /root/containers/comments/log:/usr/src/app/log \
       --restart=always \
       --detach juvia_app
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Résultats&lt;/h2&gt;

&lt;p&gt;Si tout vas bien, lors du déploiement de cette version du site avec ce billet, le layout devrait afficher la liste des commentaires des billets ainsi qu&amp;#39;un formulaire pour en laisser. Ce sera l&amp;#39;occasion de tester l&amp;#39;application en réel et de voir les améliorations à apporter même si j&amp;#39;ai déjà quelques idées (localisation, ajout de notifications, etc.).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Mon nouveau travail, bilan après un mois</title>
    <link rel="alternate" href="/blog/2015/mon-nouveau-travail-bilan-apres-un-mois/"/>
    <id>/blog/2015/mon-nouveau-travail-bilan-apres-un-mois/</id>
    <published>2015-04-25T15:25:48+02:00</published>
    <updated>2015-04-25T15:25:48+02:00</updated>
    <author>
      <name>Bob Maerten</name>
    </author>
    <content type="html">&lt;p&gt;Pour être tout à fait honnête, j&amp;#39;avais prévu de faire un point une semaine, 15j et 1 mois après mon changement de travail, mais force est de constater que je suis complètement largué sur le timing.&lt;/p&gt;

&lt;p&gt;Il faut dire que le changement fût assez rude. Je n&amp;#39;aurais pas cru que de revenir à mes premières amours de développeur serait aussi difficile&amp;nbsp;! Les journées, voire les semaines passent à une vitesse&amp;hellip; Bref, ce n&amp;#39;est pas simple, mais ça revient un peu à la fois, et j&amp;#39;apprends plein de choses en plus de découvrir ce nouveau domaine assez méconnu pour moi qu&amp;#39;est le e-commerce.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Sans entrer dans les détails, je travaille pour un client qui utilise notre solution &lt;em&gt;adhoc&lt;/em&gt; de site de e-commerce, associé à un back-office de gestion commerciale, le tout développé en &lt;a href="http://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; depuis quelques années et quelques versions majeures de &lt;em&gt;RoR&lt;/em&gt;, donc qui a beaucoup évolué depuis. Même sans prendre en compte mon double &lt;em&gt;noobiisme&lt;/em&gt; de sysadmin en rémission et du domaine concerné, rentrer dans le concept de l&amp;#39;application n&amp;#39;est pas simple. Mon boss a eu la bonne idée de me coller sur la couverture des tests. C&amp;#39;est un très bon moyen de comprendre ce qu&amp;#39;est censé faire l&amp;#39;appli, tout en me replongeant dans la logique des tests unitaires/fonctionnels. C&amp;#39;est également un excellent moyen d&amp;#39;augmenter la confiance dans les modifications que je peux apporter.&lt;/p&gt;

&lt;p&gt;J&amp;#39;apprécie également le flux de travail mis en place. Répartis à quatres coins de mon écran, un éditeur de texte, plusieurs &lt;em&gt;shells&lt;/em&gt; au sein d&amp;#39;une session &lt;a href="http://tmux.sourceforge.net/"&gt;tmux&lt;/a&gt; faisant tourner la &lt;em&gt;stack&lt;/em&gt; de l&amp;#39;application, un &lt;a href="https://github.com/guard/guard"&gt;guard&lt;/a&gt; pour valider les tests associés au fichier que je suis en train de modifier, une console pour accéder aux données, l&amp;#39;appli github pour &lt;em&gt;commit&lt;/em&gt;er et &lt;em&gt;push&lt;/em&gt;er mes changements. Une fois le travail poussé sur github, les hooks se mettent en marche et déclenchent un test global chez &lt;a href="https://codeship.com"&gt;codeship&lt;/a&gt; ainsi qu&amp;#39;une analyse du code chez &lt;a href="https://codeclimate.com"&gt;codeclimate&lt;/a&gt; et je suis notifié du résultat dans &lt;a href="https://slack.com"&gt;slack&lt;/a&gt;.  Ces actions s&amp;#39;exécutent également lorsque qu&amp;#39;on fait un &lt;em&gt;Pull Request&lt;/em&gt; et ont la bonne idée de s&amp;#39;insérer directement dans les infos de github, ce qui permet d&amp;#39;avoir une confiance accrue dans la fusion de branche, et ça franchement c&amp;#39;est top.&lt;/p&gt;

&lt;p&gt;En ce qui concerne l&amp;#39;organisation du travail, j&amp;#39;avais naturellement des appréhensions vis à vis de ma relation au télétravail, mais finalement elles se sont dissipées assez rapidement. Des &lt;em&gt;calls&lt;/em&gt; (&lt;a href="http://www.mumble.com"&gt;mumble&lt;/a&gt;/&lt;a href="https://join.me"&gt;join.me&lt;/a&gt;) réguliers avec mon boss et les clients (y compris quand je bloque sur un point), un &lt;a href="https://slack.com"&gt;slack&lt;/a&gt; pour la communication interne, et un compte-rendu du travail effectué en fin de journée que j&amp;#39;organise un peu comme je l&amp;#39;entends du moment que le travail est fait. Et ça, ça change tout&amp;nbsp;! Aller poster un courrier ou chercher un recommandé à la poste, prendre une 1/2h pour aller chez le coiffeur ou à un rendez-vous médical, effectuer une démarche administrative pendant les horaires de bureaux, tout cela est possible et accessible.&lt;/p&gt;

&lt;p&gt;Donc me voilà, presque un mois après cette reconversion assez inatendue, de retour derrière un éditeur de texte pour transformer des specifications en services concrets, utiles et utilisés. Rien que cela est un énorme gain qui, certes me prends du temps et de l&amp;#39;énergie, mais qui m&amp;#39;apporte la satisfaction professionnelle qui me manquait tant. L&amp;#39;effort intellectuel est parfois difficile, tant au niveau du retard à rattraper sur les évolutions des outils, des concepts et parfois aussi de l&amp;#39;algorithmique que je n&amp;#39;ai que peu pratiquée ces dernières années, mais en vaut largement la chandelle.&lt;/p&gt;

&lt;p&gt;J&amp;#39;essairai de faire d&amp;#39;autres points prochainement, et je l&amp;#39;espère des billets un peu plus techniques et concrèts quand je serai plus à l&amp;#39;aise. En attendant, je retourne m&amp;#39;imprégner de cette &lt;em&gt;codebase&lt;/em&gt; que je ne désespère pas d&amp;#39;appréhender globalement tantôt.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Premiers pas avec OSX Yosemite</title>
    <link rel="alternate" href="/blog/2015/premiers-pas-avec-osx-yosemite/"/>
    <id>/blog/2015/premiers-pas-avec-osx-yosemite/</id>
    <published>2015-03-15T10:11:00+01:00</published>
    <updated>2015-03-15T10:11:00+01:00</updated>
    <author>
      <name>Bob Maerten</name>
    </author>
    <content type="html">&lt;p&gt;Comme je le disais dans le &lt;a href="/blog/2015/preparation-au-changement"&gt;précédent billet&lt;/a&gt;, je vais dès le mois prochain changer d&amp;#39;environnement professionnel, mais également d&amp;#39;environnement logiciel et matériel dans la mesure où je vais passer sous OSX Yosemite.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;La réception du matos ce weekend m&amp;#39;a permis de remettre les mains dans l&amp;#39;environnement à la pomme auquel je n&amp;#39;avais pas vraiment touché depuis une formation à OSX 10.6 il y a quelques années, laissée sans suite.&lt;/p&gt;

&lt;p&gt;Si vous suivez mon activité en ligne vous savez surement que je suis un utilisateur de GNU/Linux (et Debian/Ubuntu en particulier) depuis trèèèèèès longtemps, mais j&amp;#39;ai été agréablement surpris des similitudes entre les environnements. Le système de dock par exemple se comporte quasiment comme celui de Ubuntu. Les paramètres systèmes sont organisés de la même façon. Oh, je me doute bien de qui a pompé sur qui, pas de souci, mais au final je m&amp;#39;y retrouve plutôt facilement pour le moment.&lt;/p&gt;

&lt;p&gt;Après, il y a également le terrain bien connu du terminal et de la ligne de commande. Ici, même combat, un bash de base quand on lance le terminal, mais le processus d&amp;#39;installation d&amp;#39;un zsh ou même d&amp;#39;un &lt;a href="http://ohmyz.sh"&gt;oh-my-zsh&lt;/a&gt; est identique (on est sur une base BSD) et je retrouve assez vite mon environnement habituel.&lt;/p&gt;

&lt;p&gt;Pour l&amp;#39;installation des applications, pas de déroute non plus car avec &lt;a href="http://brew.sh"&gt;Homebrew&lt;/a&gt; là non plus rien de perturbant. Il y a même une recette pour permettre d&amp;#39;installer des logiciels packagés, et là c&amp;#39;est vraiment le bonheur (même si l&amp;#39;installation d&amp;#39;un &lt;code&gt;.dmg&lt;/code&gt; est vraiment triviale).&lt;/p&gt;

&lt;p&gt;Il y a même par défaut un système bien plus léger et tout aussi pratique que le Dash de Ubuntu pour rechercher et lancer facilement des commandes ou des logiciels.&lt;/p&gt;

&lt;p&gt;Enfin, pour les quelques réglages un peu spécifiques, comme virer ce f*ck*ng &lt;em&gt;shime&lt;/em&gt; au démarrage ou pour accélérer la répétition du clavier, il faut fouiller un peu sur le net et on trouve rapidement une solution soit à l&amp;#39;aide d&amp;#39;outils spécifiques, soit à l&amp;#39;aide de commandes systèmes en terminal.&lt;/p&gt;

&lt;p&gt;Voilà, pas trop dérouté par cette première approche, hormis peut-être le &lt;em&gt;layout&lt;/em&gt; du clavier qui va me poser quelques problèmes un moment (surtout que je passe souvent d&amp;#39;un clavier à un autre, je tape ce texte sur mon portable PC) et de me resituer dans le contexte d&amp;#39;un débutant sur ce système BSD que je connais peu. Mais cette fois-ci, je vais essayer de noter et commenter le plus possible ce que je découvre, le partager ici ou sur le &lt;a href="https://github.com/bobmaerten/TIL.git"&gt;dépôt TIL (Today I Learned)&lt;/a&gt; que j&amp;#39;ai récemment crée pour ce genre de choses.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Préparation au changement</title>
    <link rel="alternate" href="/blog/2015/preparation-au-changement/"/>
    <id>/blog/2015/preparation-au-changement/</id>
    <published>2015-01-21T07:32:00+01:00</published>
    <updated>2015-01-21T07:32:00+01:00</updated>
    <author>
      <name>Bob Maerten</name>
    </author>
    <content type="html">&lt;p&gt;À l&amp;#39;extrême opposé des concepts fondamentaux de la &lt;a href="http://fr.wikipedia.org/wiki/Loi_de_Murphy"&gt;Loi de Murphy&lt;/a&gt;, c&amp;#39;est lorsque tu ne t&amp;#39;attends plus à rien qu&amp;#39;une agréable surprise te saute à la tronche. En effet, dans quelques semaines, je vais mettre de côté ma carrière dans la fonction publique pour rejoindre une entreprise privée à taille humaine pour une aventure pleine de découverte, de rencontres, et je l&amp;#39;espère avec un minimum de réussite.&lt;/p&gt;

&lt;p&gt;Aussi inattendue que réjouissante soit cette nouvelle, il faut dire que mon &lt;a href="/blog/2014/renonciation/"&gt;parcours du combattant ces 3 dernières années&lt;/a&gt; pour faire changer les choses sur le plan de mon environnement quotidien ainsi que sur mon ouverture personnelle, m&amp;#39;avait manifestement préparé à celà.&lt;/p&gt;

&lt;p&gt;Et qui dit changement professionnel, dit également changement d&amp;#39;habitudes. J&amp;#39;ai envie d&amp;#39;explorer de nouveaux environnements et c&amp;#39;est pourquoi sur proposition de mon futur employeur, j&amp;#39;ai décidé de tenter l&amp;#39;expérience OSX pour cette aventure, avec toute la rupture que cela peut occasionner. Heureusement j&amp;#39;ai un peu de temps pour m&amp;#39;y mettre et le système n&amp;#39;est pas sans quelques outils que j&amp;#39;utilise déjà au quotidien : un terminal, vim et un bon browser, « ouate ailse » comme dirait notre &lt;a href="http://youtu.be/J83fzP-rHio?t=1m37s"&gt;Jean Dujardin&lt;/a&gt; (inter)national ?&lt;/p&gt;

&lt;p&gt;Cela dit, cette rupture ne sera sans doute pas sans écueil, mais je sais que je pourrais compter sur la large et compétente communauté en ligne pour me filer des tuyaux, que je ne manquerais pas de compiler ici.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To infinity, and beyond!&lt;/em&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Série de screencasts sur un outil d'orchestration système : Ansible</title>
    <link rel="alternate" href="/blog/2014/serie-de-screencasts-sur-un-outil-d-orchestration-systeme-ansible/"/>
    <id>/blog/2014/serie-de-screencasts-sur-un-outil-d-orchestration-systeme-ansible/</id>
    <published>2014-11-14T12:28:00+01:00</published>
    <updated>2014-11-14T12:28:00+01:00</updated>
    <author>
      <name>Bob Maerten</name>
    </author>
    <content type="html">&lt;p&gt;Il parait que c&amp;#39;est Vendredi, et comme « Vendredi c&amp;#39;est permis »  alors je fais un peu de promo. ;-)&lt;/p&gt;

&lt;p&gt;J&amp;#39;ai eu l&amp;#39;opportunité de réaliser des screencasts pour une plate-forme de tutoriels en ligne locale (&lt;a href="https://synbioz.com"&gt;Synbioz&lt;/a&gt; à Lomme/Euratechnologies) sur le sujet de l&amp;#39;orchestration de tâches d&amp;#39;administration système avec un outil qu&amp;#39;on utilise au quotidien depuis quelques mois au système : Ansible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackademy.io/tutoriel-videos/ansible-automatiser-gestion-serveur-partie-1"&gt;Intro à l&amp;#39;automatisation de tâches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackademy.io/tutoriel-videos/ansible-decouverte-playbook"&gt;Les playbooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackademy.io/tutoriel-videos/roles-ansible"&gt;Les rôles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;N&amp;#39;hésitez pas à partager ces liens sur vos réseaux et me faire des retours positifs ou non, ou des suggestions pour les prochains.&lt;/p&gt;

&lt;p&gt;De plus, si vous vous sentez l&amp;#39;âme d&amp;#39;un pédagogue sur une des thématiques de la plate-forme, n&amp;#39;hésitez pas à les contacter, ils sont très sympathiques et fournissent un &lt;a href="https://github.com/hackademy-io/screencasts-production"&gt;&amp;ldquo;process&amp;rdquo; et un &amp;ldquo;kit&amp;rdquo;&lt;/a&gt; pour démarrer la réalisations, et au besoin, ils peuvent s&amp;#39;occuper du montage final.&lt;/p&gt;

&lt;p&gt;PS : les plus malins auront remarqué le changement de prononciation de &amp;ldquo;ansible&amp;rdquo; sur les 2 derniers, c&amp;#39;est simplement parce que j&amp;#39;ai eu pas mal de retour sur le 1er qui date de qq mois et que les gens préféraient à l&amp;#39;anglaise.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Attention à la visibilité interne de vos conteneurs Docker</title>
    <link rel="alternate" href="/blog/2014/attention-a-la-visibilite-interne-de-vos-containers-docker/"/>
    <id>/blog/2014/attention-a-la-visibilite-interne-de-vos-containers-docker/</id>
    <published>2014-10-21T13:56:00+02:00</published>
    <updated>2014-10-21T13:56:00+02:00</updated>
    <author>
      <name>Bob Maerten</name>
    </author>
    <content type="html">&lt;p&gt;Au détour d&amp;#39;une &lt;a href="https://twitter.com/bourvill/status/524492824302333953"&gt;question sur twitter&lt;/a&gt; de &lt;a href="https://twitter.com/bourvill"&gt;Maxime&lt;/a&gt;, j&amp;#39;ai eu l&amp;#39;occasion de me rendre compte que par défaut, 2 &lt;em&gt;containers&lt;/em&gt; Docker lancés sur le même &lt;em&gt;host&lt;/em&gt; pouvaient effectivement se « voir » et donc échanger sur leur ports ouverts comme bon leur semblent.&lt;/p&gt;

&lt;p&gt;Bien que ce ne soit pas complètement gênant, il m&amp;#39;a semblé que cela pouvait potentiellement poser des problèmes de sécurité, ou &lt;a href="https://twitter.com/bourvill/status/524527521589907456"&gt;comme le souligne Maxime&lt;/a&gt; des soucis fonctionnels.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; : Utilisez &lt;code&gt;--icc=false&lt;/code&gt; dans vos paramètres du service &lt;code&gt;docker&lt;/code&gt; pour isoler les communications inter-conteneurs.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Explications&lt;/h2&gt;

&lt;p&gt;Comme habituellement dans ce cas là, on dégaine le &lt;a href="http://fr.wikipedia.org/wiki/RTFM"&gt;RTFM&lt;/a&gt; et on cherche comment ça fonctionne. Il faut savoir que le comportement par défaut de Docker est de permettre justement cette communication entre &lt;em&gt;containers&lt;/em&gt;. Illustrons ceci avec un exemple.&lt;/p&gt;

&lt;p&gt;Admettons que je lance un &lt;em&gt;container&lt;/em&gt; &lt;code&gt;nginx&lt;/code&gt; et que j&amp;#39;obtienne son IP interne.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run --name container-nginx -d nginx
1ab647f88995b0669d7e6b777b7640149c1805ebbba953f3e6662ce2e7289fbf

$ docker inspect --format '{{ .NetworkSettings.IPAddress }}' container-nginx
172.17.0.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puis je lance un second &lt;em&gt;container&lt;/em&gt; pour vérifier la connectivité avec le premier sur le port 80&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run --rm -it ubuntu
root@ec073d0d3f63:/# apt-get update &amp;amp;&amp;amp; apt-get install curl -y
[...]
root@ec073d0d3f63:/# curl -I http://172.17.0.2
HTTP/1.1 200 OK
Server: nginx/1.7.6
Date: Tue, 21 Oct 2014 12:22:07 GMT
Content-Type: text/html
Content-Length: 612
Last-Modified: Tue, 30 Sep 2014 14:16:33 GMT
Connection: keep-alive
ETag: "542abb41-264"
Accept-Ranges: bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ça fonctionne ! O_o&lt;/p&gt;

&lt;p&gt;Cela est dû au paramétrage par défaut de Docker. En effet, l&amp;#39;option &lt;code&gt;--icc&lt;/code&gt; (inter-container communication) est par défaut à &lt;code&gt;true&lt;/code&gt;. Pour désactiver ce comportement (recommandé en production), modifiez la variable &lt;code&gt;DOCKER_OPTS&lt;/code&gt; du fichier &lt;code&gt;/etc/default/docker&lt;/code&gt; avant de relancer le service (attention, cela stoppe tous vos &lt;em&gt;containers&lt;/em&gt;).&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ grep DOCKER_OPTS /etc/default/docker
# Use DOCKER_OPTS to modify the daemon startup options.
DOCKER_OPTS="--icc=false"
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Petite précision, cela n&amp;#39;affectera pas la communication entre les &lt;em&gt;containers&lt;/em&gt; liés. Pour cela, Docker modifie les règles du firewall en activant une règle FORWARD.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run --rm -it --link container-nginx:nginx ubuntu
root@f5bb6005185e:/# apt-get update &amp;amp;&amp;amp; apt-get install curl -y
[...]
root@f5bb6005185e:/# curl -I http://172.17.0.2
HTTP/1.1 200 OK
Server: nginx/1.7.6
Date: Tue, 21 Oct 2014 12:42:50 GMT
Content-Type: text/html
Content-Length: 612
Last-Modified: Tue, 30 Sep 2014 14:16:33 GMT
Connection: keep-alive
ETag: "542abb41-264"
Accept-Ranges: bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Un coup d&amp;#39;oeil sur les règles &lt;em&gt;iptables&lt;/em&gt; sur un autre terminal :&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination
ACCEPT     tcp  --  172.17.0.2           172.17.0.4           tcp spt:http
ACCEPT     tcp  --  172.17.0.4           172.17.0.2           tcp dpt:http
ACCEPT     tcp  --  172.17.0.2           172.17.0.4           tcp spt:https
ACCEPT     tcp  --  172.17.0.4           172.17.0.2           tcp dpt:https
ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
ACCEPT     all  --  anywhere             anywhere
DROP       all  --  anywhere             anywhere

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et une fois le &lt;em&gt;container&lt;/em&gt; terminé :&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination
ACCEPT     all  --  anywhere             anywhere             ctstate RELATED,ESTABLISHED
ACCEPT     all  --  anywhere             anywhere
DROP       all  --  anywhere             anywhere

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;En résumé&lt;/h2&gt;

&lt;p&gt;Si vous souhaitez sécuriser un peu mieux votre &lt;em&gt;host&lt;/em&gt; Docker, en particulier si vous faites tourner des conteneurs de différents clients/publics, pensez à activer l&amp;#39;option &lt;code&gt;--icc=false&lt;/code&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
